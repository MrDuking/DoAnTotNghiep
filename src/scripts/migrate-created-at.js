const mongoose = require('mongoose')
require('dotenv').config()

async function migrateCreatedAt() {
  try {
    await mongoose.connect(process.env.MONGODB_URI, {
      dbName: process.env.DB_NAME,
    })

    console.log('K·∫øt n·ªëi MongoDB th√†nh c√¥ng')

    const defaultDate = new Date()

    // 1. Migrate Patient collection
    const patientResult = await mongoose.connection.db.collection('patients').updateMany(
      { createdAt: { $exists: false } },
      {
        $set: {
          createdAt: defaultDate,
          updatedAt: defaultDate,
        },
      },
    )
    console.log(`‚úÖ C·∫≠p nh·∫≠t ${patientResult.modifiedCount} b·ªánh nh√¢n kh√¥ng c√≥ createdAt`)

    // 2. Migrate Appointment collection
    const appointmentResult = await mongoose.connection.db.collection('appointments').updateMany(
      { createdAt: { $exists: false } },
      {
        $set: {
          createdAt: defaultDate,
          updatedAt: defaultDate,
        },
      },
    )
    console.log(`‚úÖ C·∫≠p nh·∫≠t ${appointmentResult.modifiedCount} l·ªãch h·∫πn kh√¥ng c√≥ createdAt`)

    // 3. Migrate OrderMapping collection
    const orderResult = await mongoose.connection.db.collection('ordermappings').updateMany(
      { createdAt: { $exists: false } },
      {
        $set: {
          createdAt: defaultDate,
          updatedAt: defaultDate,
        },
      },
    )
    console.log(`‚úÖ C·∫≠p nh·∫≠t ${orderResult.modifiedCount} ƒë∆°n h√†ng kh√¥ng c√≥ createdAt`)

    // 4. Migrate Doctor collection
    const doctorResult = await mongoose.connection.db.collection('doctors').updateMany(
      { createdAt: { $exists: false } },
      {
        $set: {
          createdAt: defaultDate,
          updatedAt: defaultDate,
        },
      },
    )
    console.log(`‚úÖ C·∫≠p nh·∫≠t ${doctorResult.modifiedCount} b√°c sƒ© kh√¥ng c√≥ createdAt`)

    console.log('üéâ Migration ho√†n th√†nh!')
  } catch (error) {
    console.error('‚ùå L·ªói migration:', error)
  } finally {
    await mongoose.disconnect()
    console.log('ƒê√£ ng·∫Øt k·∫øt n·ªëi MongoDB')
  }
}

// Ch·∫°y migration
migrateCreatedAt()
